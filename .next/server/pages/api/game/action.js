"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/game/action";
exports.ids = ["pages/api/game/action"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgame%2Faction&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cgame%5Caction.js&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgame%2Faction&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cgame%5Caction.js&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_game_action_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\game\\action.js */ \"(api)/./pages/api/game/action.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_game_action_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_game_action_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/game/action\",\n        pathname: \"/api/game/action\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_game_action_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmdhbWUlMkZhY3Rpb24mcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q2dhbWUlNUNhY3Rpb24uanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDMEQ7QUFDMUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHNEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxzREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sb3ZlbGV0dGVyX3dpdGhzdXBhYmFzZS8/NDY5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXGdhbWVcXFxcYWN0aW9uLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZ2FtZS9hY3Rpb25cIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9nYW1lL2FjdGlvblwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgame%2Faction&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cgame%5Caction.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/game/action.js":
/*!**********************************!*\
  !*** ./pages/api/game/action.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n\nconst SUPABASE_URL = process.env.SUPABASE_URL;\nconst SUPABASE_SERVICE_ROLE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY);\nfunction createDeck() {\n    const cards = [];\n    for(let i = 0; i < 5; i++)cards.push({\n        name: \"Guard\",\n        value: 1\n    });\n    for(let i = 0; i < 2; i++)cards.push({\n        name: \"Priest\",\n        value: 2\n    });\n    for(let i = 0; i < 2; i++)cards.push({\n        name: \"Baron\",\n        value: 3\n    });\n    for(let i = 0; i < 2; i++)cards.push({\n        name: \"Handmaid\",\n        value: 4\n    });\n    for(let i = 0; i < 2; i++)cards.push({\n        name: \"Prince\",\n        value: 5\n    });\n    cards.push({\n        name: \"King\",\n        value: 6\n    });\n    cards.push({\n        name: \"Countess\",\n        value: 7\n    });\n    cards.push({\n        name: \"Princess\",\n        value: 8\n    });\n    return shuffle(cards);\n}\nfunction shuffle(arr) {\n    return arr.slice().sort(()=>Math.random() - 0.5);\n}\nasync function upsertGame(code, state) {\n    const { error } = await supabase.from(\"games\").upsert({\n        code,\n        state\n    }, {\n        onConflict: \"code\"\n    });\n    if (error) throw error;\n}\nasync function getGame(code) {\n    const { data, error } = await supabase.from(\"games\").select(\"*\").eq(\"code\", code).maybeSingle();\n    if (error) throw error;\n    return data;\n}\nasync function handler(req, res) {\n    if (req.method !== \"POST\") return res.status(405).json({\n        error: \"Only POST\"\n    });\n    const body = req.body || {};\n    const { action } = body;\n    try {\n        if (action === \"create\") {\n            const playerName = body.playerName || \"Player\";\n            const code = Math.random().toString(36).substring(2, 6).toUpperCase();\n            const pid = body.pid || \"p_\" + Math.random().toString(36).slice(2, 9);\n            const state = {\n                code,\n                players: [\n                    {\n                        id: pid,\n                        name: playerName,\n                        hand: [],\n                        tokens: 0,\n                        eliminated: false\n                    }\n                ],\n                deck: [],\n                started: false,\n                currentPlayerIndex: 0,\n                log: [],\n                chat: [],\n                burn: null\n            };\n            await upsertGame(code, state);\n            return res.status(200).json({\n                code,\n                pid\n            });\n        }\n        if (action === \"join\") {\n            const { code, playerName, pid } = body;\n            const row = await getGame(code);\n            if (!row) return res.status(404).json({\n                ok: false,\n                message: \"game not found\"\n            });\n            const state = row.state;\n            if (state.started) return res.status(400).json({\n                ok: false,\n                message: \"already started\"\n            });\n            const canonicalPid = pid || \"p_\" + Math.random().toString(36).slice(2, 9);\n            const exists = state.players.find((p)=>p.id === canonicalPid || p.name === playerName);\n            if (!exists) {\n                state.players.push({\n                    id: canonicalPid,\n                    name: playerName,\n                    hand: [],\n                    tokens: 0,\n                    eliminated: false\n                });\n            }\n            await upsertGame(code, state);\n            return res.status(200).json({\n                ok: true,\n                pid: canonicalPid\n            });\n        }\n        if (action === \"start\") {\n            const { code } = body;\n            const row = await getGame(code);\n            if (!row) return res.status(404).json({\n                ok: false,\n                message: \"game not found\"\n            });\n            const state = row.state;\n            if (state.started) return res.status(400).json({\n                ok: false,\n                message: \"already started\"\n            });\n            state.started = true;\n            state.deck = createDeck();\n            state.burn = state.deck.pop();\n            state.players.forEach((p)=>{\n                p.hand = [\n                    state.deck.pop()\n                ];\n                p.eliminated = false;\n                p.protected = false;\n            });\n            state.currentPlayerIndex = 0;\n            state.log = [];\n            if (state.deck.length > 0) state.players[0].hand.push(state.deck.pop());\n            await upsertGame(code, state);\n            return res.status(200).json({\n                ok: true\n            });\n        }\n        if (action === \"chat\") {\n            const { code, message, pid, playerName } = body;\n            const row = await getGame(code);\n            if (!row) return res.status(404).json({\n                ok: false,\n                message: \"game not found\"\n            });\n            const state = row.state;\n            // prefer pid to find sender; fallback to provided playerName; fallback to 'Unknown'\n            let senderName = \"Unknown\";\n            if (pid) {\n                const p = state.players.find((x)=>x.id === pid);\n                if (p) senderName = p.name;\n            }\n            if (senderName === \"Unknown\" && playerName) senderName = playerName;\n            const entry = {\n                sender: senderName,\n                message,\n                ts: Date.now()\n            };\n            state.chat = state.chat || [];\n            state.chat.push(entry);\n            await upsertGame(code, state);\n            return res.status(200).json({\n                ok: true\n            });\n        }\n        if (action === \"play\") {\n            const { code, cardIndex, targetId, guessedCard, pid } = body;\n            const row = await getGame(code);\n            if (!row) return res.status(404).json({\n                ok: false,\n                message: \"game not found\"\n            });\n            const state = row.state;\n            const playerIndex = state.players.findIndex((p)=>p.id === pid);\n            if (playerIndex === -1) return res.status(400).json({\n                ok: false,\n                message: \"player not found\"\n            });\n            if (playerIndex !== state.currentPlayerIndex) return res.status(400).json({\n                ok: false,\n                message: \"not your turn\"\n            });\n            const player = state.players[playerIndex];\n            if (player.eliminated) return res.status(400).json({\n                ok: false,\n                message: \"eliminated\"\n            });\n            if (cardIndex < 0 || cardIndex >= player.hand.length) return res.status(400).json({\n                ok: false,\n                message: \"invalid card index\"\n            });\n            // Enforce Countess rule BEFORE removing played card\n            const candidate = player.hand[cardIndex];\n            const other = player.hand.find((_, i)=>i !== cardIndex);\n            if (other && other.name === \"Countess\" && (candidate.name === \"King\" || candidate.name === \"Prince\")) {\n                return res.status(400).json({\n                    ok: false,\n                    message: \"Countess rule: must discard Countess if holding with King/Prince\"\n                });\n            }\n            // Remove the played card\n            const card = player.hand.splice(cardIndex, 1)[0];\n            state.log = state.log || [];\n            state.log.push(`${player.name} played ${card.name}.`);\n            // target validations\n            if (targetId) {\n                const t = state.players.find((p)=>p.id === targetId);\n                if (!t) return res.status(400).json({\n                    ok: false,\n                    message: \"target not found\"\n                });\n                if (t.protected) return res.status(400).json({\n                    ok: false,\n                    message: \"target protected by Handmaid\"\n                });\n            }\n            switch(card.name){\n                case \"Guard\":\n                    {\n                        if (!targetId) return res.status(400).json({\n                            ok: false,\n                            message: \"Guard needs a target\"\n                        });\n                        if (!guessedCard || guessedCard === \"Guard\") return res.status(400).json({\n                            ok: false,\n                            message: \"Invalid guess\"\n                        });\n                        const tgt = state.players.find((p)=>p.id === targetId);\n                        if (!tgt?.hand?.length) return res.status(400).json({\n                            ok: false,\n                            message: \"Target has no card\"\n                        });\n                        const actual = tgt.hand[0].name;\n                        if (actual === guessedCard) {\n                            tgt.eliminated = true;\n                            state.log.push(`${player.name} guessed ${guessedCard} correctly — ${tgt.name} is eliminated.`);\n                        } else {\n                            state.log.push(`${player.name} guessed ${guessedCard} — wrong.`);\n                        }\n                        break;\n                    }\n                case \"Priest\":\n                    {\n                        if (!targetId) return res.status(400).json({\n                            ok: false,\n                            message: \"Priest needs a target\"\n                        });\n                        const tgt = state.players.find((p)=>p.id === targetId);\n                        if (!tgt?.hand?.length) return res.status(400).json({\n                            ok: false,\n                            message: \"Target has no card\"\n                        });\n                        state.log.push(`${player.name} used Priest on ${tgt.name}.`);\n                        break;\n                    }\n                case \"Baron\":\n                    {\n                        if (!targetId) return res.status(400).json({\n                            ok: false,\n                            message: \"Baron needs a target\"\n                        });\n                        const tgt = state.players.find((p)=>p.id === targetId);\n                        const myCard = player.hand[0];\n                        const theirCard = tgt?.hand?.[0];\n                        if (!myCard || !theirCard) return res.status(400).json({\n                            ok: false,\n                            message: \"Both must have a card\"\n                        });\n                        if (myCard.value > theirCard.value) {\n                            tgt.eliminated = true;\n                            state.log.push(`${player.name} (${myCard.name}) beat ${tgt.name} (${theirCard.name}).`);\n                        } else if (myCard.value < theirCard.value) {\n                            player.eliminated = true;\n                            state.log.push(`${tgt.name} (${theirCard.name}) beat ${player.name} (${myCard.name}).`);\n                        } else {\n                            state.log.push(`${player.name} and ${tgt.name} tied with ${myCard.name}.`);\n                        }\n                        break;\n                    }\n                case \"Handmaid\":\n                    {\n                        player.protected = true;\n                        state.log.push(`${player.name} is protected until their next turn.`);\n                        break;\n                    }\n                case \"Prince\":\n                    {\n                        if (!targetId) return res.status(400).json({\n                            ok: false,\n                            message: \"Prince needs a target\"\n                        });\n                        const tgt = state.players.find((p)=>p.id === targetId);\n                        const discarded = tgt?.hand?.pop();\n                        if (!discarded) return res.status(400).json({\n                            ok: false,\n                            message: \"Target has no card\"\n                        });\n                        state.log.push(`${tgt.name} discarded ${discarded.name} due to Prince.`);\n                        if (discarded.name === \"Princess\") {\n                            tgt.eliminated = true;\n                            state.log.push(`${tgt.name} discarded the Princess and was eliminated.`);\n                        } else {\n                            if (state.deck.length > 0) tgt.hand = [\n                                state.deck.pop()\n                            ];\n                            else tgt.hand = [];\n                        }\n                        break;\n                    }\n                case \"King\":\n                    {\n                        if (!targetId) return res.status(400).json({\n                            ok: false,\n                            message: \"King needs a target\"\n                        });\n                        const tgt = state.players.find((p)=>p.id === targetId);\n                        if (!tgt?.hand?.length || !player.hand?.length) return res.status(400).json({\n                            ok: false,\n                            message: \"Both need a card to swap\"\n                        });\n                        const tmp = player.hand[0];\n                        player.hand[0] = tgt.hand[0];\n                        tgt.hand[0] = tmp;\n                        state.log.push(`${player.name} swapped hands with ${tgt.name}.`);\n                        break;\n                    }\n                case \"Countess\":\n                    {\n                        state.log.push(`${player.name} discarded the Countess.`);\n                        break;\n                    }\n                case \"Princess\":\n                    {\n                        player.eliminated = true;\n                        state.log.push(`${player.name} discarded the Princess and was eliminated.`);\n                        break;\n                    }\n            }\n            // Round end checks\n            const active = state.players.filter((p)=>!p.eliminated);\n            const newRound = ()=>{\n                state.deck = createDeck();\n                state.burn = state.deck.pop();\n                state.players.forEach((p)=>{\n                    p.hand = [\n                        state.deck.pop()\n                    ];\n                    p.eliminated = false;\n                    p.protected = false;\n                });\n                state.currentPlayerIndex = 0;\n                if (state.deck.length > 0) state.players[0].hand.push(state.deck.pop());\n            };\n            if (active.length <= 1) {\n                const winner = active[0];\n                if (winner) winner.tokens = (winner.tokens || 0) + 1;\n                state.log.push(`${winner ? winner.name : \"No one\"} won the round (last player standing).`);\n                newRound();\n                await upsertGame(code, state);\n                return res.status(200).json({\n                    ok: true\n                });\n            }\n            if (state.deck.length === 0) {\n                const living = state.players.filter((p)=>!p.eliminated && p.hand?.length > 0);\n                if (living.length > 0) {\n                    living.sort((a, b)=>b.hand[0].value - a.hand[0].value);\n                    living[0].tokens = (living[0].tokens || 0) + 1;\n                    state.log.push(`${living[0].name} won the round (highest card when deck empty).`);\n                }\n                newRound();\n                await upsertGame(code, state);\n                return res.status(200).json({\n                    ok: true\n                });\n            }\n            // Next turn\n            do {\n                state.currentPlayerIndex = (state.currentPlayerIndex + 1) % state.players.length;\n            }while (state.players[state.currentPlayerIndex].eliminated);\n            if (state.players[state.currentPlayerIndex].protected) delete state.players[state.currentPlayerIndex].protected;\n            if (state.deck.length > 0) state.players[state.currentPlayerIndex].hand.push(state.deck.pop());\n            await upsertGame(code, state);\n            return res.status(200).json({\n                ok: true\n            });\n        }\n        return res.status(400).json({\n            ok: false,\n            message: \"unknown action\"\n        });\n    } catch (err) {\n        console.error(\"action error\", err);\n        return res.status(500).json({\n            ok: false,\n            error: String(err)\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/game/action.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgame%2Faction&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cgame%5Caction.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();